{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNz9FPMeLH7ruW+5pHTwXYb"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["Yo, ho, ho, ho, yo, ho, ho, ho\n","\n","Velejando neste mar, ondas vamos enfrentar\n","Com saquê de Bink, não podemos esquecer!\n","Longe desse cais vai ver o mais belo entardecer\n","Colorindo o céu ao som das aves a cantar\n","Resta só dizer adeus para a casa e amigos meus\n","Canto aqui uma canção e sigo a navegar\n","Ondas quebram a espalhar ouro e prata pelo ar\n","E sem destino nós seguimos no azul sem fim\n","\n","Nunca poderá faltar o saquê de Bink ao mar\n","Isso é só o que um pirata deve ter\n","Nosso lar é o navio, se o oceano for hostil\n","Erga a bandeira e comece a navegar\n","Tempestades vão chegar e até podem assustar\n","Siga as ondas, deixe a dança conduzir você\n","Se não avistar um fim e pensar em desistir\n","Fique firme, pois um novo dia vai surgir\n","\n","Yo, ho, ho, ho, yo, ho, ho, ho\n","\n","Com um saquê de Bink em mãos, eu não temo a escuridão\n","Seja amanhã ou hoje, sonhos vou viver\n","Sinto por me despedir de quem teve de partir\n","Mas fico em paz, pois junto a Lua você brilhará\n","\n","Com um saquê de Bink em mãos, nós cantamos a canção\n","Vamos todos juntos velejar por esse mar\n","Você deve ser você, no fim só ossos vamos ser\n","Então apenas viva a vida como conseguir\n","\n","Yo, ho, ho, ho, yo, ho, ho, ho"],"metadata":{"id":"tgXCCfzgyTDp"}},{"cell_type":"code","source":["import string\n","\n","dicionario = {}\n","\n","def frequencia(arquivo):\n","    texto = open(arquivo, \"r\")\n","    for linha in texto:\n","        linha = linha.strip()\n","        linha - linha.lower()\n","        linha = linha.translate(linha.maketrans(\"\", \"\", string.punctuation))\n","        palavras = linha.split(\" \")\n","\n","        for palavra in palavras:\n","            if palavra in dicionario:\n","                dicionario[palavra] += 1\n","            else:\n","                dicionario[palavra] = 1\n","\n","frequencia(\"arquivo.txt\")\n","for key in list(dicionario.keys):\n","    print(key, \":\", dicionario[key])"],"metadata":{"id":"iOQqJE_XyWLp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import string\n","\n","dicionario = {} \n","\n","def contar(arquivo):\n","    texto = open(arquivo, \"r\")  \n","    for linha in texto: \n","        linha = linha.strip() \n","        linha = linha.lower() \n","        linha = linha.translate(linha.maketrans(\"\", \"\", string.punctuation)) \n","        palavras = linha.split(\" \") \n","    \n","        for palavra in palavras: \n","            if palavra in dicionario: \n","                dicionario[palavra] += 1\n","            else: \n","                dicionario[palavra] = 1\n","        if palavra in ['de',  'a',  'o',  'que',  'e',  'do',  'da',  'em',  'um',  'para',  'é',  'com',  'não',  'uma',  'os',  'no',  'se',  'na',  'por',  'mais',  'as',  'dos',  'como',  'mas',  'foi',  'ao',  'ele',  'das',  'tem',  'à',  'seu',  'sua',  'ou',  'ser',  'quando',  'muito',  'há',  'nos',  'já',  'está',  'eu',  'também',  'só',  'pelo',  'pela',  'até',  'isso',  'ela',  'entre',  'era',  'depois',  'sem',  'mesmo',  'aos',  'ter',  'seus',  'quem',  'nas',  'me',  'esse',  'eles',  'estão',  'você',  'tinha',  'foram',  'essa',  'num',  'nem',  'suas',  'meu',  'às',  'minha',  'têm',  'numa',  'pelos',  'elas',  'havia',  'seja',  'qual',  'será',  'nós',  'tenho',  'lhe',  'deles',  'essas',  'esses',  'pelas',  'este',  'fosse',  'dele',  'tu',  'te',  'vocês',  'vos',  'lhes',  'meus',  'minhas',  'teu',  'tua',  'teus',  'tuas',  'nosso',  'nossa',  'nossos',  'nossas',  'dela',  'delas',  'esta',  'estes',  'estas',  'aquele',  'aquela',  'aqueles',  'aquelas',  'isto',  'aquilo',  'estou',  'está',  'estamos',  'estão',  'estive',  'esteve',  'estivemos',  'estiveram',  'estava',  'estávamos',  'estavam',  'estivera',  'estivéramos',  'esteja',  'estejamos',  'estejam',  'estivesse',  'estivéssemos',  'estivessem',  'estiver',  'estivermos',  'estiverem',  'hei',  'há',  'havemos',  'hão',  'houve',  'houvemos',  'houveram',  'houvera',  'houvéramos',  'haja',  'hajamos',  'hajam',  'houvesse',  'houvéssemos',  'houvessem',  'houver',  'houvermos',  'houverem',  'houverei',  'houverá',  'houveremos',  'houverão',  'houveria',  'houveríamos',  'houveriam',  'sou',  'somos',  'são',  'era',  'éramos',  'eram',  'fui',  'foi',  'fomos',  'foram',  'fora',  'fôramos',  'seja',  'sejamos',  'sejam',  'fosse',  'fôssemos',  'fossem',  'for',  'formos',  'forem',  'serei',  'será',  'seremos',  'serão',  'seria',  'seríamos',  'seriam',  'tenho',  'tem',  'temos',  'tém',  'tinha',  'tínhamos',  'tinham',  'tive',  'teve',  'tivemos',  'tiveram',  'tivera',  'tivéramos',  'tenha',  'tenhamos',  'tenham',  'tivesse',  'tivéssemos',  'tivessem',  'tiver',  'tivermos',  'tiverem',  'terei',  'terá',  'teremos',  'terão',  'teria',  'teríamos',  'teriam']:\n","            del dicionario[palavra]\n","contar(\"arquivo.txt\")\n","\n","for key in list(dicionario.keys()): \n","    print(key, \":\", dicionario[key])"],"metadata":{"id":"h4FLkgy9ye45"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["notas_alunos = {}\n","\n","while True:\n","    nome = input(\"Digite o nome do aluno (ou aperte enter para sair): \")\n","    if nome == \"\":\n","        break\n","    \n","    nota1 = float(input(\"Digite a nota 1: \"))\n","    nota2 = float(input(\"Digite a nota 2: \"))\n","    \n","    notas_alunos[nome] = (nota1, nota2)\n","\n","def calcular_media(nome):\n","    notas = notas_alunos.get(nome)\n","    if notas:\n","        media = sum(notas) / len(notas)\n","        return media\n","    else:\n","        return None\n","\n","aluno = input(\"De qual o aluno deseja calcular a média? \")\n","media = calcular_media(aluno)\n","\n","if media is not None:\n","    print(f\"A média do aluno {aluno} é {media:.2f}.\")\n","else:\n","    print(f\"Aluno {aluno} não encontrado.\")"],"metadata":{"id":"TXlFo_elyg9m"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["dicionario = {}\n","\n","for i in range(6):\n","    nome = input(\"Digite o nome do corredor:\")\n","\n","    tempos = [float(x) for x in input(\"Digite os tempos da 10 voltas separados por um espaço em branco:\").split()]\n","    dicionario[nome] = tempos\n","\n","rapido_piloto = \"\"\n","rapido_volta = -1\n","rapido_index = 0\n","media_tempos = {}\n","for key in list(dicionario.keys()): \n","    soma = 0\n","    for volta in dicionario[key]:\n","        if rapido_volta == -1:\n","            rapido_volta = volta\n","            rapido_piloto = key\n","            rapido_index = dicionario[key].index(volta) + 1\n","        elif volta < rapido_volta:\n","            rapido_volta = volta\n","            rapido_piloto = key\n","            rapido_index = dicionario[key].index(volta) + 1\n","        soma += volta\n","    media_tempos[key] = soma/len(dicionario[key])\n","\n","count = 1\n","print(\"Classificação final:\")\n","while media_tempos != {}:\n","    menor = min(media_tempos, key=media_tempos.get)\n","    print(f\"{count} - {menor}\")\n","    del media_tempos[menor]\n","    count += 1\n","\n","print()\n","print(f\"A volta mais rapida da prova foi a {rapido_index}° pelo piloto {rapido_piloto}, que durou {rapido_volta} segundos\")"],"metadata":{"id":"EN2deN4vyiuM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["agenda = {}\n","def incluir_nome(nome: str, telefone: list):\n","    agenda[nome] = telefone\n","\n","def incluir_telefone(nome: str, telefone: str):\n","    if nome not in agenda:\n","        pergunta = input(\"Essa nome não existe na agenda. Você gostaria de adiciona-lo ?\")\n","        if pergunta.lower() == \"sim\":\n","            incluir_nome(nome, [telefone])\n","        else:\n","            agenda[nome].append(telefone)\n","\n","def excluir_telefone(nome: str, telefone: str):\n","    if len(agenda[nome]) == 1:\n","        del agenda[nome]\n","    else:\n","        if telefone in agenda[nome]:\n","            agenda[nome].remove(telefone)\n","        else:\n","            print(\"O telefone não está cadastrado\")\n","\n","def excluir_nome(nome: str):\n","    if nome in agenda:\n","        del agenda[nome]\n","    else:\n","        print(\"O nome não está cadastrado\")\n","\n","def consultar_telefone(nome:str):\n","    if nome in agenda:\n","        print(f\"Telefone de {nome}\")\n","        for fone in agenda[nome]:\n","            print(\"-\", fone)\n","    else:\n","        print(\"O nome não está cadastrado\")\n","    \n","incluir_nome(\"Jorge Machado\", [\"942568595\", \"45893126456\"])\n","consultar_telefone(\"Jorge Machado\")\n","excluir_telefone(\"Jorge Machado\", \"942568595\")\n","consultar_telefone(\"Jorge Machado\")\n","excluir_nome(\"Jorge Machado\")\n","consultar_telefone(\"Jorge Machado\")\n","incluir_telefone(\"Juliana Oliveira\", \"1578935647841\")\n","consultar_telefone(\"Juliana Oliveira\")"],"metadata":{"id":"w6kqn6D4ykUx"},"execution_count":null,"outputs":[]}]}